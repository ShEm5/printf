#include <stdio.h>  // Including the standard input-output header file for functions like printf.
#include <stdarg.h> // Including the standard argument header file for handling variable arguments.

/**
 * Prints formatted output to stdout according to a format string.
 *
 * @param format: A character string specifying the format.
 * @param ...: Variable arguments to be formatted and printed.
 * @return: The number of characters printed (excluding the null byte used to end output to strings).
 */
int _printf(const char *format, ...) {
    va_list args;  // Variable argument list.
    va_start(args, format);  // Initializing the argument list.

    int count = 0;  // Counter for the number of characters printed.

    // Loop through the format string.
    for (int i = 0; format[i] != '\0'; i++) {
        if (format[i] == '%') {  // If a conversion specifier is encountered.
            i++;  // Move to the next character after the '%'.

            // Handle the conversion specifier.
            switch (format[i]) {
                case 'c': {
                    // Print a single character.
                    char c = (char) va_arg(args, int);
                    putchar(c);
                    count++;
                    break;
                }
                case 's': {
                    // Print a string.
                    char *s = va_arg(args, char*);
                    while (*s != '\0') {
                        putchar(*s);
                        s++;
                        count++;
                    }
                    break;
                }
                case '%': {
                    // Print a '%' character.
                    putchar('%');
                    count++;
                    break;
                }
                default:
                    // Invalid conversion specifier.
                    printf("Invalid conversion specifier: %c\n", format[i]);
                    break;
            }
        } else {
            // Print non-format characters.
            putchar(format[i]);
            count++;
        }
    }

    va_end(args);  // Clean up the argument list.

    return count;  // Return the number of characters printed.
}

// Usage example for _printf

int main() {
    int num = 42;
    char letter = 'A';
    char *name = "John Doe";

    return 0;
}
